{
  "openapi": "3.0.1",
  "info": {
    "title": "Contacts Manager",
    "description": "This is a server exposing REST endpoints for a contact management application. Exposes CRUD apis for contacts and contact groups. Backed by mongodb",
    "contact": {
      "email": "kirupakaranh@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://hk-contact-manager.herokuapp.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "contacts",
      "description": "Operation for contacts"
    },
    {
      "name": "contact groups",
      "description": "Operations for contact groups"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "GetContacts",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactList"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "contacts"
        ],
        "summary": "Update an existing contact",
        "operationId": "UpdateContact",
        "requestBody": {
          "description": "Contact object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "Add a new contact",
        "operationId": "AddContact",
        "requestBody": {
          "description": "Contact object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Find contact by ID",
        "description": "Returns a single contact",
        "operationId": "GetContactById",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "ID of contact to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "Deletes a Contact",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "Contact id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Contact not found",
            "content": {}
          }
        }
      }
    },
    "/contacts/search": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Find contact by key",
        "description": "Returns search result",
        "operationId": "SearchContact",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "search query which can be name/phone number/email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query supplied",
            "content": {}
          }
        }
      }
    },
    "/contact_groups": {
      "get": {
        "tags": [
          "contact groups"
        ],
        "summary": "Get all contact groups",
        "operationId": "GetContactGroups",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactGroupList"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact group not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "contact groups"
        ],
        "summary": "Update an existing contact group",
        "operationId": "UpdateContactGroup",
        "requestBody": {
          "description": "Contact group object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {}
          },
          "404": {
            "description": "Contact group not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "contact groups"
        ],
        "summary": "Add a new contact group",
        "operationId": "AddContactGroup",
        "requestBody": {
          "description": "Contact Group object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/contact_groups/{contactGroupId}": {
      "get": {
        "tags": [
          "contact groups"
        ],
        "summary": "Find contact by ID",
        "description": "Returns a single contact",
        "operationId": "GetContactGroupById",
        "parameters": [
          {
            "name": "contactGroupId",
            "in": "path",
            "description": "ID of contact group to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroup"
                }
              }
            }
          },
          "404": {
            "description": "Contact group not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "contact groups"
        ],
        "summary": "Deletes a Contact group",
        "operationId": "DeleteContactGroup",
        "parameters": [
          {
            "name": "contactGroupId",
            "in": "path",
            "description": "Contact group id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Contact group not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Contact"
        }
      },
      "ContactGroupList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContactGroup"
        }
      },
      "ContactGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "string",
                  "pattern": "^(\\b([0]|\\+91)?[5-9]\\d{9}\\b)|(\\b(\\+?[0-8]{3})?[2-8]\\d{7}\\b)$"
                },
                "tag": {
                  "type": "string"
                }
              }
            }
          },
          "email": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "emailId": {
                  "type": "string",
                  "pattern": "\\S+@\\S+\\.\\S+"
                },
                "tag": {
                  "type": "string"
                }
              }
            }
          },
          "created_time": {
            "type": "string",
            "format": "date_time",
            "readOnly": true
          },
          "last_modified_time": {
            "type": "string",
            "format": "date_time",
            "readOnly": true
          }
        }
      }
    }
  }
}