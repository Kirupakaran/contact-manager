openapi: 3.0.1
info:
  title: Contacts Manager
  description: This is a server exposing REST endpoints for a contact management application.
    Exposes CRUD apis for contacts and contact groups. Backed by mongodb
  contact:
    email: kirupakaranh@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: //localhost:3000/v1
tags:
- name: contacts
  description: Operation for contacts
- name: contact groups
  description: Operations for contact groups
paths:
  /contacts:
    put:
      tags:
      - contacts
      summary: Update an existing contact
      operationId: updateContact
      requestBody:
        description: Contact object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact not found
          content: {}
        405:
          description: Validation exception
          content: {}
    post:
      tags:
      - contacts
      summary: Add a new contact
      operationId: addContact
      requestBody:
        description: Contact object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  /contacts/{contactId}:
    get:
      tags:
      - contacts
      summary: Find contact by ID
      description: Returns a single contact
      operationId: getContactById
      parameters:
      - name: contactId
        in: path
        description: ID of contact to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact not found
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - contacts
      summary: Deletes a Contact
      operationId: deleteContact
      parameters:
      - name: contactId
        in: path
        description: Contact id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact not found
          content: {}
  /contacts/search:
    get:
      tags:
      - contacts
      summary: Find contact by key
      description: Returns search result
      operationId: searchContact
      parameters:
      - name: query
        in: query
        description: search query which can be name/phone number/email
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactSearchResult'
        400:
          description: Invalid query supplied
          content: {}
      security:
      - api_key: []
  /contact_groups:
    put:
      tags:
      - contact groups
      summary: Update an existing contact group
      operationId: updateContactGroup
      requestBody:
        description: Contact group object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactGroup'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact group not found
          content: {}
        405:
          description: Validation exception
          content: {}
    post:
      tags:
      - contact groups
      summary: Add a new contact group
      operationId: addContactGroup
      requestBody:
        description: Contact Group object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactGroup'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  /contact_groups/{contactGroupId}:
    get:
      tags:
      - contact groups
      summary: Find contact by ID
      description: Returns a single contact
      operationId: getContactGroupById
      parameters:
      - name: contactGroupId
        in: path
        description: ID of contact group to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroup'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact not found
          content: {}
      security:
      - api_key: []
    delete:
      tags:
      - contact groups
      summary: Deletes a Contact group
      operationId: deleteContactGroup
      parameters:
      - name: contactGroupId
        in: path
        description: Contact group id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact group not found
          content: {}
components:
  schemas:
    ContactSearchResult:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    ContactGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phone:
          type: array
          items:
            type: object
            properties:
              number:
                type: string
              tag:
                type: string
        email:
          type: array
          items:
            type: object
            properties:
              emailId:
                type: string
              tag:
                type: string
        created_time:
          type: string
          format: date_time
        last_modified_time:
          type: string
          format: date_time
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
